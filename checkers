int[][] board = new int[8][8]; 
int tileSize = 80;
int currentPlayer = 1;
boolean pieceSelected = false;
int selectedRow = -1, selectedCol = -1;
int playerWhite = 1, kingWhite = 2;
int playerBlack = -1, kingBlack = -2;
boolean gameEnded = false;

void setup() {
  size(640, 640);
  initializeBoard();
}

void draw() {
  background(255);
  drawBoard();
  drawPieces();
  displayCurrentPlayer();

  if (gameEnded) {
    displayGameOver();
  }
}

void drawBoard() {
  for (int row = 0; row < 8; row++) {
    for (int col = 0; col < 8; col++) {
      if ((row + col) % 2 == 0) {
        fill(150);
      } else {
        fill(139, 69, 19);
      }
      rect(col * tileSize, row * tileSize, tileSize, tileSize);
    }
  }
}
void drawPieces() {
  for (int row = 0; row < 8; row++) {
    for (int col = 0; col < 8; col++) {
      if (board[row][col] == playerWhite) {
        fill(255);
        ellipse(col * tileSize + tileSize / 2, row * tileSize + tileSize / 2, tileSize - 10, tileSize - 10);  
      } else if (board[row][col] == playerBlack) {
        fill(0);
        ellipse(col * tileSize + tileSize / 2, row * tileSize + tileSize / 2, tileSize - 10, tileSize - 10);  
      } else if (board[row][col] == kingWhite) {
        fill(255);
        ellipse(col * tileSize + tileSize / 2, row * tileSize + tileSize / 2, tileSize - 10, tileSize - 10);  
        textAlign(CENTER, CENTER);
        fill(0);
        textSize(24);
        text("K", col * tileSize + tileSize / 2, row * tileSize + tileSize / 2);
      } else if (board[row][col] == kingBlack) {
        fill(50);
        ellipse(col * tileSize + tileSize / 2, row * tileSize + tileSize / 2, tileSize - 10, tileSize - 10);  
        textAlign(CENTER, CENTER);
        fill(255);
        textSize(24);
        text("K", col * tileSize + tileSize / 2, row * tileSize + tileSize / 2);
      }
    }
  }
}
void displayCurrentPlayer() {
  fill(255, 0, 0);
  textSize(24);
  String playerText = (currentPlayer == playerWhite) ? "Turn: White" : "Turn: Black";
  text(playerText, 20, height - 20);
}
